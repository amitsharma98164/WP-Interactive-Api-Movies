{"version":3,"file":"e2e/directive-bind.js","mappings":"mJAEAA,E,OAAAA,GAAM,CACLC,MAAO,CACNC,IAAK,YACLC,SAAS,EACTC,MAAM,EACNC,MAAO,GAERC,IAAK,CACJC,IAAK,GAENC,QAAS,CACRC,OAAQ,EAAGR,QAAOK,UACjBL,EAAMC,IAAM,kBACZD,EAAME,SAAWF,EAAME,QACvBF,EAAMG,MAAQH,EAAMG,KACpBH,EAAMI,OAASC,EAAIC,GAAG,I,2FCfzB,MAAMG,EAAYC,GACjBA,GAAwB,iBAATA,IAAsBC,MAAMC,QAAQF,GAEvCG,EAAY,CAACC,EAAQC,KACjC,GAAIN,EAASK,IAAWL,EAASM,GAChC,IAAK,MAAMC,KAAOD,EACbN,EAASM,EAAOC,KACdF,EAAOE,IAAMC,OAAOC,OAAOJ,EAAQ,CAAE,CAACE,GAAM,CAAC,IAClDH,EAAUC,EAAOE,GAAMD,EAAOC,KAE9BC,OAAOC,OAAOJ,EAAQ,CAAE,CAACE,GAAMD,EAAOC,IAGzC,EAoBKG,EAjBqB,MAE1B,MAAMC,EAAWC,SAASC,cACxB,yCAEF,IAAKF,EAAU,MAAO,CAAC,EACvB,IACC,MAAM,MAAEpB,GAAUuB,KAAKC,MAAMJ,EAASK,aACtC,GAAIhB,EAAST,GAAQ,OAAOA,EAC5B,MAAM0B,MAAM,gCAIb,CAHE,MAAOC,GAERC,QAAQC,IAAIF,EACb,CACA,MAAO,CAAC,CAAC,EAGOG,GACJC,EAAW,CAAE/B,OAAOgC,EAAAA,EAAAA,IAAWb,IAEtB,oBAAXc,SAAwBA,OAAOlC,MAAQgC,GAE3C,MAAMhC,EAAQ,EAAGC,WAAUkC,MACjCrB,EAAUkB,EAAUG,GACpBrB,EAAUM,EAAUnB,EAAM,C","sources":["webpack://__experimentalInteractivity/./e2e/js/directive-bind.js","webpack://__experimentalInteractivity/./src/runtime/store.js"],"sourcesContent":["import { store } from '../../src/runtime/store';\n\nstore({\n\tstate: {\n\t\turl: '/some-url',\n\t\tchecked: true,\n\t\tshow: false,\n\t\twidth: 1,\n\t},\n\tfoo: {\n\t\tbar: 1,\n\t},\n\tactions: {\n\t\ttoggle: ({ state, foo }) => {\n\t\t\tstate.url = '/some-other-url';\n\t\t\tstate.checked = !state.checked;\n\t\t\tstate.show = !state.show;\n\t\t\tstate.width += foo.bar;\n\t\t},\n\t},\n});\n","import { deepSignal } from 'deepsignal';\n\nconst isObject = (item) =>\n\titem && typeof item === 'object' && !Array.isArray(item);\n\nexport const deepMerge = (target, source) => {\n\tif (isObject(target) && isObject(source)) {\n\t\tfor (const key in source) {\n\t\t\tif (isObject(source[key])) {\n\t\t\t\tif (!target[key]) Object.assign(target, { [key]: {} });\n\t\t\t\tdeepMerge(target[key], source[key]);\n\t\t\t} else {\n\t\t\t\tObject.assign(target, { [key]: source[key] });\n\t\t\t}\n\t\t}\n\t}\n};\n\nconst getSerializedState = () => {\n\t// TODO: change the store tag ID for a better one.\n\tconst storeTag = document.querySelector(\n\t\t`script[type=\"application/json\"]#store`\n\t);\n\tif (!storeTag) return {};\n\ttry {\n\t\tconst { state } = JSON.parse(storeTag.textContent);\n\t\tif (isObject(state)) return state;\n\t\tthrow Error('Parsed state is not an object');\n\t} catch (e) {\n\t\t// eslint-disable-next-line no-console\n\t\tconsole.log(e);\n\t}\n\treturn {};\n};\n\nconst rawState = getSerializedState();\nexport const rawStore = { state: deepSignal(rawState) };\n\nif (typeof window !== 'undefined') window.store = rawStore;\n\nexport const store = ({ state, ...block }) => {\n\tdeepMerge(rawStore, block);\n\tdeepMerge(rawState, state);\n};\n"],"names":["store","state","url","checked","show","width","foo","bar","actions","toggle","isObject","item","Array","isArray","deepMerge","target","source","key","Object","assign","rawState","storeTag","document","querySelector","JSON","parse","textContent","Error","e","console","log","getSerializedState","rawStore","deepSignal","window","block"],"sourceRoot":""}