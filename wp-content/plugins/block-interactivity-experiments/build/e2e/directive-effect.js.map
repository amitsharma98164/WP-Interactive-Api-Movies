{"version":3,"file":"e2e/directive-effect.js","mappings":"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","sources":["webpack://__experimentalInteractivity/./e2e/js/directive-effect.js","webpack://__experimentalInteractivity/./src/runtime/hooks.js","webpack://__experimentalInteractivity/./src/runtime/store.js"],"sourcesContent":["import { store } from '../../src/runtime/store';\nimport { directive } from '../../src/runtime/hooks';\nimport { useContext, useMemo } from 'preact/hooks';\n\n// Fake `data-wp-fakeshow` directive to test when things are removed from the DOM.\n// Replace with `data-wp-show` when it's ready.\ndirective(\n\t'fakeshow',\n\t({\n\t\tdirectives: {\n\t\t\tfakeshow: { default: fakeshow },\n\t\t},\n\t\telement,\n\t\tevaluate,\n\t\tcontext,\n\t}) => {\n\t\tconst contextValue = useContext(context);\n\t\tconst children = useMemo(\n\t\t\t() =>\n\t\t\t\telement.type === 'template'\n\t\t\t\t\t? element.props.templateChildren\n\t\t\t\t\t: element,\n\t\t\t[]\n\t\t);\n\t\tif (!evaluate(fakeshow, { context: contextValue })) return null;\n\t\treturn children;\n\t}\n);\n\nstore({\n\tstate: {\n\t\tisOpen: true,\n\t\tisElementInTheDOM: false,\n\t},\n\tselectors: {\n\t\telementInTheDOM: ({ state }) =>\n\t\t\tstate.isElementInTheDOM\n\t\t\t\t? 'element is in the DOM'\n\t\t\t\t: 'element is not in the DOM',\n\t},\n\tactions: {\n\t\ttoggle({ state }) {\n\t\t\tstate.isOpen = !state.isOpen;\n\t\t},\n\t},\n\teffects: {\n\t\telementAddedToTheDOM: ({ state }) => {\n\t\t\tstate.isElementInTheDOM = true;\n\n\t\t\treturn () => {\n\t\t\t\tstate.isElementInTheDOM = false;\n\t\t\t};\n\t\t},\n\t\tchangeFocus: ({ state }) => {\n\t\t\tif (state.isOpen) {\n\t\t\t\tdocument.querySelector(\"[data-testid='input']\").focus();\n\t\t\t}\n\t\t},\n\t},\n});\n","import { h, options, createContext, cloneElement } from 'preact';\nimport { useRef, useMemo } from 'preact/hooks';\nimport { rawStore as store } from './store';\n\n// Main context.\nconst context = createContext({});\n\n// WordPress Directives.\nconst directiveMap = {};\nconst directivePriorities = {};\nexport const directive = (name, cb, { priority = 10 } = {}) => {\n\tdirectiveMap[name] = cb;\n\tdirectivePriorities[name] = priority;\n};\n\n// Resolve the path to some property of the store object.\nconst resolve = (path, ctx) => {\n\tlet current = { ...store, context: ctx };\n\tpath.split('.').forEach((p) => (current = current[p]));\n\treturn current;\n};\n\n// Generate the evaluate function.\nconst getEvaluate =\n\t({ ref } = {}) =>\n\t(path, extraArgs = {}) => {\n\t\t// If path starts with !, remove it and save a flag.\n\t\tconst hasNegationOperator = path[0] === '!' && !!(path = path.slice(1));\n\t\tconst value = resolve(path, extraArgs.context);\n\t\tconst returnValue =\n\t\t\ttypeof value === 'function'\n\t\t\t\t? value({\n\t\t\t\t\t\tref: ref.current,\n\t\t\t\t\t\t...store,\n\t\t\t\t\t\t...extraArgs,\n\t\t\t\t  })\n\t\t\t\t: value;\n\t\treturn hasNegationOperator ? !returnValue : returnValue;\n\t};\n\n// Separate directives by priority. The resulting array contains objects\n// of directives grouped by same priority, and sorted in ascending order.\nconst usePriorityLevels = (directives) =>\n\tuseMemo(() => {\n\t\tconst byPriority = Object.entries(directives).reduce(\n\t\t\t(acc, [name, values]) => {\n\t\t\t\tconst priority = directivePriorities[name];\n\t\t\t\tif (!acc[priority]) acc[priority] = {};\n\t\t\t\tacc[priority][name] = values;\n\n\t\t\t\treturn acc;\n\t\t\t},\n\t\t\t{}\n\t\t);\n\n\t\treturn Object.entries(byPriority)\n\t\t\t.sort(([p1], [p2]) => p1 - p2)\n\t\t\t.map(([, obj]) => obj);\n\t}, [directives]);\n\n// Directive wrapper.\nconst Directive = ({ type, directives, props: originalProps }) => {\n\tconst ref = useRef(null);\n\tconst element = h(type, { ...originalProps, ref });\n\tconst evaluate = useMemo(() => getEvaluate({ ref }), []);\n\n\t// Add wrappers recursively for each priority level.\n\tconst byPriorityLevel = usePriorityLevels(directives);\n\treturn (\n\t\t<RecursivePriorityLevel\n\t\t\tdirectives={byPriorityLevel}\n\t\t\telement={element}\n\t\t\tevaluate={evaluate}\n\t\t\toriginalProps={originalProps}\n\t\t/>\n\t);\n};\n\n// Priority level wrapper.\nconst RecursivePriorityLevel = ({\n\tdirectives: [directives, ...rest],\n\telement,\n\tevaluate,\n\toriginalProps,\n}) => {\n\t// This element needs to be a fresh copy so we are not modifying an already\n\t// rendered element with Preact's internal properties initialized. This\n\t// prevents an error with changes in `element.props.children` not being\n\t// reflected in `element.__k`.\n\telement = cloneElement(element);\n\n\t// Recursively render the wrapper for the next priority level.\n\t//\n\t// Note that, even though we're instantiating a vnode with a\n\t// `RecursivePriorityLevel` here, its render function will not be executed\n\t// just yet. Actually, it will be delayed until the current render function\n\t// has finished. That ensures directives in the current priorty level have\n\t// run (and thus modified the passed `element`) before the next level.\n\tconst children =\n\t\trest.length > 0 ? (\n\t\t\t<RecursivePriorityLevel\n\t\t\t\tdirectives={rest}\n\t\t\t\telement={element}\n\t\t\t\tevaluate={evaluate}\n\t\t\t\toriginalProps={originalProps}\n\t\t\t/>\n\t\t) : (\n\t\t\telement\n\t\t);\n\n\tconst props = { ...originalProps, children };\n\tconst directiveArgs = { directives, props, element, context, evaluate };\n\n\tfor (const d in directives) {\n\t\tconst wrapper = directiveMap[d]?.(directiveArgs);\n\t\tif (wrapper !== undefined) props.children = wrapper;\n\t}\n\n\treturn props.children;\n};\n\n// Preact Options Hook called each time a vnode is created.\nconst old = options.vnode;\noptions.vnode = (vnode) => {\n\tif (vnode.props.__directives) {\n\t\tconst props = vnode.props;\n\t\tconst directives = props.__directives;\n\t\tdelete props.__directives;\n\t\tvnode.props = {\n\t\t\ttype: vnode.type,\n\t\t\tdirectives,\n\t\t\tprops,\n\t\t};\n\t\tvnode.type = Directive;\n\t}\n\n\tif (old) old(vnode);\n};\n","import { deepSignal } from 'deepsignal';\n\nconst isObject = (item) =>\n\titem && typeof item === 'object' && !Array.isArray(item);\n\nexport const deepMerge = (target, source) => {\n\tif (isObject(target) && isObject(source)) {\n\t\tfor (const key in source) {\n\t\t\tif (isObject(source[key])) {\n\t\t\t\tif (!target[key]) Object.assign(target, { [key]: {} });\n\t\t\t\tdeepMerge(target[key], source[key]);\n\t\t\t} else {\n\t\t\t\tObject.assign(target, { [key]: source[key] });\n\t\t\t}\n\t\t}\n\t}\n};\n\nconst getSerializedState = () => {\n\t// TODO: change the store tag ID for a better one.\n\tconst storeTag = document.querySelector(\n\t\t`script[type=\"application/json\"]#store`\n\t);\n\tif (!storeTag) return {};\n\ttry {\n\t\tconst { state } = JSON.parse(storeTag.textContent);\n\t\tif (isObject(state)) return state;\n\t\tthrow Error('Parsed state is not an object');\n\t} catch (e) {\n\t\t// eslint-disable-next-line no-console\n\t\tconsole.log(e);\n\t}\n\treturn {};\n};\n\nconst rawState = getSerializedState();\nexport const rawStore = { state: deepSignal(rawState) };\n\nif (typeof window !== 'undefined') window.store = rawStore;\n\nexport const store = ({ state, ...block }) => {\n\tdeepMerge(rawStore, block);\n\tdeepMerge(rawState, state);\n};\n"],"names":["directive","directives","fakeshow","default","element","evaluate","context","contextValue","useContext","children","useMemo","type","props","templateChildren","store","state","isOpen","isElementInTheDOM","selectors","elementInTheDOM","actions","toggle","effects","elementAddedToTheDOM","changeFocus","document","querySelector","focus","createContext","directiveMap","directivePriorities","name","cb","priority","Directive","originalProps","ref","useRef","h","path","extraArgs","hasNegationOperator","slice","value","ctx","current","split","forEach","p","resolve","returnValue","getEvaluate","byPriorityLevel","byPriority","Object","entries","reduce","acc","values","sort","p1","p2","map","obj","usePriorityLevels","RecursivePriorityLevel","rest","cloneElement","length","directiveArgs","d","wrapper","undefined","old","options","vnode","__directives","isObject","item","Array","isArray","deepMerge","target","source","key","assign","rawState","storeTag","JSON","parse","textContent","Error","e","console","log","getSerializedState","rawStore","deepSignal","window","block"],"sourceRoot":""}